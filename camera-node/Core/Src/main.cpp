/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2024 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */
/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "string.h"
#include "cmsis_os.h"
#include "libjpeg.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include "application/include/SystemTasks.h"
#include "business_logic/Communication/CommunicationManager.h"
#include "business_logic/DataHandling/ImageCapturer/ImageCapturer.h"
#include "business_logic/ClockSyncronization/SharedClockSlaveManager.h"
#include "application/include/SystemTasks.h"
/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */
using namespace business_logic::DataHandling;
using namespace business_logic::Communication;
using namespace business_logic::ClockSyncronization;
using namespace hardware_abstraction::Controllers;
using namespace hardware_abstraction::Devices;
/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */

/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/


DCMI_HandleTypeDef hdcmi;
DMA_HandleTypeDef hdma_dcmi;

FDCAN_HandleTypeDef hfdcan1;

I2C_HandleTypeDef hi2c1;

UART_HandleTypeDef huart3;

osThreadId defaultTaskHandle;
/* USER CODE BEGIN PV */
static std::shared_ptr<ImageCapturer> imageCapturer;
static std::shared_ptr<CommunicationManager> commMng;
static std::shared_ptr<SharedClockSlaveManager> globalClkMng;

static std::shared_ptr<TimeController> timecontroller;
static std::shared_ptr<CanController> cancontroller;
static std::shared_ptr<ICameraDevice>  cameraController;

static std::shared_ptr<application::SystemTasks> systemTaskHandler;
/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_DMA_Init(void);
static void MX_USART3_UART_Init(void);
static void MX_USB_OTG_HS_USB_Init(void);
static void MX_DCMI_Init(void);
static void MX_ETH_Init(void);
static void MX_I2C1_Init(void);
static void MX_FDCAN1_Init(void);
void StartDefaultTask(void const * argument);

/* USER CODE BEGIN PFP */
static void createHardwareAbstractionLayerComponents();
static void createBusinessLogicLayerComponents();
static void createApplicationLayerComponents();
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void createHardwareAbstractionLayerComponents()
{
	cancontroller    = std::make_shared<CanController>();
	CameraCfg cameraCfg{hdcmi, hdma_dcmi, hi2c1};
	cameraController = std::make_shared<Ov2640Ctrl>(cameraCfg);
}

void createBusinessLogicLayerComponents()
{
	uint32_t queueSize   = 512;
	uint32_t queueLength = 512;
	//auto capturesQueue = std::make_shared<business_logic::Osal::QueueHandler>(queueSize, queueLength);
	timecontroller = std::make_shared<TimeController>();
	commMng = std::make_shared<CommunicationManager>(timecontroller, cancontroller);
	imageCapturer = std::make_shared<ImageCapturer>(cameraController);
	globalClkMng = std::make_shared<SharedClockSlaveManager>(timecontroller, cancontroller);
}

void createApplicationLayerComponents()
{
	systemTaskHandler = std::make_shared<application::SystemTasks>(commMng, imageCapturer, globalClkMng);
}
/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_DMA_Init();
  MX_USART3_UART_Init();
  MX_USB_OTG_HS_USB_Init();
  MX_DCMI_Init();
  MX_LIBJPEG_Init();
  MX_I2C1_Init();
  MX_FDCAN1_Init();
  /* USER CODE BEGIN 2 */

	createHardwareAbstractionLayerComponents();
	createBusinessLogicLayerComponents();
	//createApplicationLayerComponents();

	uint8_t img[] = {0xFF,0xD8,0xFF,0xE0,0x00,0x10,0x4A,0x46,0x49,0x46,0x00,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xDB,0x00,0x43,0x00,0x0C,0x08,0x09,0x0B,0x09,0x08,0x0C,0x0B,0x0A,0x0B,0x0E,0x0D,0x0C,0x0E,0x12,0x1E,0x14,0x12,0x11,0x11,0x12,0x25,0x1A,0x1C,0x16,0x1E,0x2C,0x26,0x2E,0x2D,0x2B,0x26,0x2A,0x29,0x30,0x36,0x45,0x3B,0x30,0x33,0x41,0x34,0x29,0x2A,0x3C,0x52,0x3D,0x41,0x47,0x4A,0x4D,0x4E,0x4D,0x2F,0x3A,0x55,0x5B,0x54,0x4B,0x5A,0x45,0x4C,0x4D,0x4A,0xFF,0xDB,0x00,0x43,0x01,0x0D,0x0E,0x0E,0x12,0x10,0x12,0x23,0x14,0x14,0x23,0x4A,0x32,0x2A,0x32,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0x4A,0xFF,0xC4,0x00,0x1F,0x00,0x00,0x01,0x05,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0xFF,0xC4,0x00,0xB5,0x10,0x00,0x02,0x01,0x03,0x03,0x02,0x04,0x03,0x05,0x05,0x04,0x04,0x00,0x00,0x01,0x7D,0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,0x22,0x71,0x14,0x32,0x81,0x91,0xA1,0x08,0x23,0x42,0xB1,0xC1,0x15,0x52,0xD1,0xF0,0x24,0x33,0x62,0x72,0x82,0x09,0x0A,0x16,0x17,0x18,0x19,0x1A,0x25,0x26,0x27,0x28,0x29,0x2A,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4A,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFF,0xC4,0x00,0x1F,0x01,0x00,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0xFF,0xC4,0x00,0xB5,0x11,0x00,0x02,0x01,0x02,0x04,0x04,0x03,0x04,0x07,0x05,0x04,0x04,0x00,0x01,0x02,0x77,0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,0xA1,0xB1,0xC1,0x09,0x23,0x33,0x52,0xF0,0x15,0x62,0x72,0xD1,0x0A,0x16,0x24,0x34,0xE1,0x25,0xF1,0x17,0x18,0x19,0x1A,0x26,0x27,0x28,0x29,0x2A,0x35,0x36,0x37,0x38,0x39,0x3A,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4A,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFF,0xC0,0x00,0x11,0x08,0x00,0xF0,0x01,0x40,0x03,0x01,0x21,0x00,0x02,0x11,0x01,0x03,0x11,0x01,0xFF,0xDA,0x00,0x0C,0x03,0x01,0x00,0x02,0x11,0x03,0x11,0x00,0x3F,0x00,0x2D,0xA7,0x6B,0x85,0x0C,0x53,0x15,0x3E,0x69,0x88,0x29,0xD4,0xC4,0x48,0x29,0xE2,0x98,0x89,0x05,0x3C,0x53,0x19,0x26,0x2A,0x40,0x29,0x88,0x90,0x0A,0x90,0x0A,0x60,0x3C,0x0A,0x90,0x0A,0x60,0x3B,0x14,0xFC,0x50,0x21,0xC0,0x53,0xB1,0x4C,0x43,0xB6,0xD1,0x8A,0x06,0x26,0x29,0x08,0xA6,0x03,0x24,0xE1,0x09,0xAE,0x67,0x5B,0x6D,0xBA,0x6B,0xFB,0xD6,0x33,0x66,0x90,0x38,0xA9,0xFA,0xD5,0x67,0xA8,0x40,0x47,0x9C,0xD3,0x72,0x68,0x01,0xD0,0xC2,0x66,0xDE,0x7F,0xBA,0x33,0x51,0xA4,0x25,0xD7,0x39,0xA5,0xB8,0x10,0x9D,0xCB,0xD6,0x9B,0xC9,0x34,0x21,0x0D,0xCD,0x37,0x24,0x54,0x8C,0x37,0x1A,0x03,0xD4,0x80,0x9B,0xF9,0xA0,0x3D,0x56,0x83,0x0D,0xDC,0xD2,0xEF,0xA8,0x6B,0x50,0x3D,0x22,0x31,0xB1,0x3E,0x94,0x0A,0xDC,0x81,0xE2,0xA4,0xA4,0x03,0xC5,0x48,0x2A,0xC0,0x91,0x6A,0x41,0x4C,0x09,0x00,0xA9,0x00,0xA6,0x22,0x55,0x15,0x20,0x14,0x00,0xF0,0x2A,0x40,0x28,0x02,0x40,0x29,0xC0,0x53,0x01,0xC0,0x53,0xB1,0x4C,0x43,0xB1,0x46,0x29,0x00,0x62,0x9B,0x8A,0x60,0x41,0x75,0xC4,0x0F,0x5C,0x9F,0x88,0x9B,0x16,0x91,0xAF,0xAB,0x56,0x72,0xDC,0xD6,0x3B,0x1C,0x8C,0xC3,0xE6,0xA6,0x3C,0x59,0x8B,0x76,0x69,0x5B,0xA3,0x13,0x2A,0xF9,0x47,0x34,0x9E,0x51,0x35,0x3B,0x92,0x6B,0x68,0x70,0x7F,0xA0,0x6A,0x32,0x7F,0xB1,0x8A,0x86,0xD6,0xD4,0x7F,0x66,0x34,0xB9,0xF9,0xB3,0x47,0x99,0xA4,0x4A,0x77,0xF1,0x92,0x57,0xE5,0x3F,0x76,0x96,0xD3,0x4E,0xE5,0x8C,0x9D,0x36,0xE4,0x55,0xAD,0xCC,0x8C,0xA6,0xFB,0xE7,0xEB,0x41,0x53,0xBA,0xB1,0xF4,0x2C,0x6B,0x0C,0x1A,0x36,0x93,0x52,0x80,0x36,0x35,0x21,0x57,0xA5,0xBB,0x01,0x39,0xA4,0x39,0xA1,0x85,0xCF,0x4E,0x6E,0x94,0x82,0xB7,0x24,0x90,0x53,0xC5,0x03,0x24,0x15,0x20,0xA6,0x22,0x45,0xA9,0x56,0xA8,0x09,0x05,0x4A,0x28,0x02,0x40,0x2A,0x50,0x29,0x81,0x20,0x15,0x20,0x14,0x84,0x3C,0x0A,0x76,0x28,0x01,0xE1,0x69,0xC0,0x53,0x10,0xEC,0x51,0x8A,0x00,0x31,0x49,0x8A,0x2E,0x05,0x4D,0x47,0x8B,0x63,0x5C,0x6F,0x88,0xCE,0x5A,0x25,0xF6,0xAC,0x9E,0xE6,0xAB,0xE1,0x39,0xB9,0x57,0xE6,0xA9,0x23,0x83,0x7C,0x54,0xEE,0x26,0x4B,0x1E,0x90,0xEF,0x13,0xC8,0x4F,0x08,0x33,0x4C,0xFB,0x1C,0x96,0xB1,0x43,0x26,0x37,0x19,0x96,0x99,0x3D,0x4B,0xFA,0x70,0x79,0x34,0x5B,0xA5,0x55,0xC7,0x61,0xEF,0x56,0x20,0xF0,0xFD,0xD7,0xF6,0x57,0x94,0xDB,0x43,0x93,0x9A,0x12,0xBA,0x2B,0x9D,0x22,0x0B,0xEB,0x16,0x55,0x0B,0xB0,0x12,0x22,0xDB,0xF8,0xD4,0x11,0xC1,0xBC,0x2C,0x66,0x58,0xA3,0xF9,0x31,0x96,0x6A,0x69,0xA8,0xEE,0x66,0x73,0xD2,0xC3,0x6F,0x63,0x36,0x5D,0xD6,0xE4,0xE7,0xA0,0xE9,0x48,0x2F,0x6D,0xD9,0x86,0xF8,0x47,0xE1,0x59,0xDF,0x52,0x87,0x1B,0x33,0x3B,0xBC,0x90,0xEC,0xD9,0xE9,0x51,0xCD,0x63,0x22,0xCA,0xA2,0x31,0x9F,0x97,0x9A,0x5C,0xB7,0x65,0x5E,0xE5,0x79,0x14,0xC4,0x70,0xE3,0x15,0x27,0x9E,0xAB,0x00,0xF9,0xAA,0x2D,0xCA,0x2B,0x6A,0x50,0x33,0x53,0x0C,0xD4,0xBD,0x46,0x7A,0x7B,0xFA,0x50,0xB5,0xB8,0x89,0x05,0x4A,0x29,0x01,0x20,0xA9,0x00,0xAB,0x11,0x2A,0xD4,0xAB,0x40,0x12,0x0A,0x95,0x68,0x02,0x51,0x52,0x2D,0x02,0x25,0x51,0x52,0x28,0xA0,0x09,0x00,0xA7,0x81,0x4C,0x07,0x81,0x4E,0x02,0x81,0x0B,0x8A,0x31,0x45,0xC0,0x31,0x4D,0xC5,0x20,0x33,0xB5,0x73,0xFB,0xB4,0x1E,0xF5,0xC6,0x6B,0xBF,0x35,0xDF,0xD0,0x54,0x3D,0xCD,0xE3,0xF0,0x98,0xA5,0x7E,0x7A,0xB1,0xB7,0x11,0x7C,0xBD,0x68,0x21,0x97,0xED,0xE7,0xD9,0xA3,0x4F,0xBF,0xEF,0xB5,0x2D,0xF8,0xD9,0x1D,0x9E,0x3B,0x5B,0x93,0xFA,0x53,0xD6,0xC4,0xF5,0x2B,0xE8,0xD3,0x11,0x68,0xB1,0x05,0x18,0x79,0x45,0x74,0x5A,0xFE,0xA5,0xFD,0x99,0xA7,0xF9,0x80,0x65,0xCF,0x02,0xAA,0x4E,0xD1,0x29,0xAD,0x4F,0x36,0xD4,0x35,0xBB,0xBB,0x87,0x3B,0xA4,0x35,0x95,0x25,0xCC,0xAD,0xD5,0xAB,0x95,0x6B,0xB8,0x5C,0x87,0xCC,0x72,0x7A,0xD2,0xE5,0xAB,0x50,0x2C,0x45,0x71,0x24,0x7D,0x18,0xD3,0xFF,0x00,0xB4,0x66,0x1F,0xC7,0x59,0xB4,0x24,0x56,0x9A,0xEA,0x49,0x7E,0xF3,0x55,0x72,0xD5,0x68,0x77,0x13,0x34,0x94,0xC4,0x7A,0xAB,0x75,0xA7,0x0A,0xB1,0x12,0xAD,0x4A,0xB4,0x0C,0x90,0x54,0x8B,0x40,0x89,0x85,0x4A,0x05,0x30,0x25,0x02,0xA4,0x51,0x4C,0x09,0x54,0x54,0xA0,0x50,0x22,0x50,0x2A,0x50,0x29,0x01,0x20,0x14,0xE0,0x28,0x01,0xF8,0xA7,0x62,0x98,0x87,0x62,0x8C,0x52,0x01,0x31,0x49,0x8A,0x00,0xC7,0xD6,0x7F,0xD6,0xC6,0x2B,0x8C,0xD5,0x0E,0xEB,0xB9,0x2A,0x3A,0x9D,0x11,0xD8,0xCC,0xC7,0xCD,0x56,0xA1,0x5C,0xA2,0xD3,0x21,0x97,0x2F,0x6D,0x82,0xD8,0xFD,0x69,0xBA,0xE7,0xCB,0x30,0x03,0xA2,0x5B,0x51,0x2D,0x84,0xBE,0x22,0x8D,0x87,0x9A,0xB6,0x51,0xB4,0x03,0x32,0xEE,0xF9,0x45,0x68,0x7F,0x66,0xCF,0xA8,0x58,0x1F,0xB6,0x49,0x2A,0xC8,0x3E,0xF0,0x61,0xC6,0x68,0x09,0xEE,0x70,0x3A,0x82,0xE2,0xE1,0x95,0x7A,0x0A,0xAD,0xE5,0x1E,0xF5,0x1A,0xD8,0x91,0x76,0x53,0x59,0x80,0xA7,0x71,0x90,0xB3,0x9E,0xD5,0x1E,0xE3,0x40,0x84,0xCD,0x14,0x00,0xBB,0x49,0xAB,0x10,0x58,0xCB,0x28,0xC8,0xE9,0x52,0xC6,0x7A,0x5D,0x3D,0x6B,0x50,0x26,0x15,0x28,0xA0,0x09,0x05,0x48,0x29,0x88,0x99,0x6A,0x55,0xA4,0x04,0xA2,0xA5,0x5A,0x04,0x4C,0xA2,0xA5,0x5A,0x60,0x4C,0x05,0x48,0x05,0x21,0x0F,0x02,0x9E,0x05,0x03,0x24,0x02,0x9D,0x8A,0x09,0x1D,0x8A,0x31,0x40,0x09,0x8A,0x69,0x14,0x0C,0xC0,0xD5,0xDB,0xFD,0x33,0xE8,0x2B,0x8D,0xBC,0xF9,0xA6,0x90,0xFB,0xD6,0x77,0xD4,0xE8,0x5B,0x14,0xB1,0x57,0x21,0x1F,0x70,0x55,0x2B,0x92,0xCB,0xD7,0x80,0xB4,0x08,0xBE,0xAE,0x29,0x9E,0x21,0xE3,0xCD,0x03,0xFB,0x94,0x13,0xD4,0x9F,0x45,0x89,0x4C,0xD0,0xF1,0x80,0xB5,0xAD,0xAB,0x4E,0xAB,0x6C,0xFF,0x00,0x4A,0xA6,0xF4,0x13,0xDC,0xF2,0x9B,0xA5,0xFD,0xEB,0x1F,0x7A,0xA7,0x23,0xAA,0xD4,0xCA,0xC2,0x65,0x49,0x26,0x26,0xA1,0x2D,0x52,0x3B,0x89,0x49,0x54,0x01,0x4E,0x45,0xC9,0xC5,0x2F,0x20,0x36,0x66,0xB6,0x16,0xF6,0x51,0xC9,0x8E,0x4D,0x6D,0x69,0x50,0x2F,0xF6,0x72,0xB6,0x79,0xA8,0xB0,0xE3,0xB9,0xD0,0x0A,0x91,0x6B,0x51,0x12,0xAD,0x4C,0x29,0x81,0x20,0xA9,0x16,0x80,0x26,0x5A,0x95,0x68,0x11,0x32,0xD4,0xCB,0x40,0x12,0xAD,0x4C,0xB4,0x08,0x99,0x45,0x48,0x05,0x20,0x1E,0x05,0x48,0x05,0x02,0x1E,0x05,0x3A,0x81,0x05,0x14,0x00,0x52,0x50,0x33,0x95,0xD5,0x5F,0xFD,0x26,0xE1,0xBD,0x2B,0xCF,0x2E,0xB5,0x69,0x1D,0xC2,0x85,0x01,0x73,0xF9,0xD4,0x2B,0x9B,0x49,0xD9,0x1D,0x34,0x1A,0x5C,0x72,0xC4,0x8F,0x82,0x37,0x0C,0xF5,0xAB,0x43,0x4F,0x8D,0x7D,0x68,0x72,0x2E,0xD7,0x24,0x68,0x90,0xEC,0xCF,0xF0,0xB6,0x6A,0xB6,0xA5,0x02,0x5D,0xE7,0x73,0x15,0x06,0x9D,0xC9,0xE5,0xB1,0x00,0xBB,0x8E,0xC9,0xB7,0x6E,0x26,0xB1,0xF5,0x8F,0x10,0x89,0x15,0x95,0x6A,0x79,0x99,0x0C,0xE3,0xEE,0x2E,0x8B,0x1E,0x2A,0x9B,0xBE,0x4D,0x3D,0xC4,0x32,0x9A,0x69,0xA0,0x0A,0x70,0x5C,0xD3,0x10,0xED,0x98,0x14,0xFB,0x61,0x99,0xC5,0x0C,0x11,0xD1,0x5D,0xC2,0xD3,0x58,0xC2,0x8A,0xC0,0x1F,0x7A,0x81,0x1A,0x48,0xA0,0xC0,0x7E,0x9E,0x95,0x94,0x91,0xA2,0xDC,0xEC,0xC5,0x4A,0x2B,0x63,0x32,0x45,0xA9,0x96,0x9D,0x86,0x48,0x2A,0x55,0xA0,0x44,0xCB,0x53,0x2D,0x00,0x4C,0xB5,0x32,0xD2,0x11,0x2A,0xD4,0xCA,0x28,0x02,0x55,0xA9,0x56,0x81,0x12,0x0A,0x78,0xA0,0x07,0x51,0x40,0x82,0x8A,0x00,0x28,0xA4,0x33,0x89,0xD5,0x64,0xFD,0xCD,0xD4,0x9F,0x5A,0xF3,0x6B,0x83,0x97,0xE2,0xA6,0x3B,0x9A,0xD4,0x35,0x23,0xD5,0xEF,0x95,0x42,0xAC,0xAD,0xC5,0x5B,0x83,0x53,0xD4,0x4F,0xDE,0x92,0x9F,0x25,0xF5,0x1F,0xB4,0xB1,0x63,0xFB,0x4E,0xE7,0xBB,0xD5,0x5B,0x9D,0x5E,0x40,0x3E,0x66,0x15,0x24,0xF3,0x98,0x17,0xDA,0xAB,0xC9,0xFC,0x55,0x90,0xF3,0xB3,0x9E,0x4D,0x0B,0x61,0x10,0x92,0x69,0xB5,0x7A,0x12,0x25,0x25,0x22,0x85,0x03,0x9A,0xB0,0x82,0x9A,0x21,0x8C,0x96,0xA6,0xD2,0xD7,0x75,0xC8,0xA4,0xED,0x7D,0x4B,0x47,0x42,0x48,0xC6,0x3D,0x2A,0x02,0xAB,0xB4,0xAE,0x38,0xAC,0x7A,0x9B,0xF2,0xD8,0xEB,0xC5,0x48,0x2B,0xA0,0xC0,0x95,0x6A,0x55,0xA0,0x09,0x16,0xA6,0x5A,0x62,0x26,0x5A,0x9D,0x69,0x08,0x99,0x6A,0x65,0xA0,0x09,0x56,0xA7,0x5A,0x04,0x48,0x2A,0x45,0xA4,0x04,0xA2,0x9F,0x40,0x82,0x8A,0x00,0x28,0xA0,0x02,0x99,0x3B,0x6D,0x85,0xCF,0xA0,0xA4,0xC6,0x8E,0x0F,0x59,0xCF,0xF6,0x6C,0xB8,0xEA,0x6B,0x8E,0x8B,0x4B,0x92,0x57,0xCB,0x71,0x44,0x0D,0x2A,0xE8,0x6A,0xA5,0x82,0xC6,0x29,0x25,0xDB,0x1A,0xD5,0x33,0x33,0x1E,0xF7,0x51,0x58,0xF8,0x5E,0xB5,0x89,0x71,0x74,0xD2,0x75,0x35,0x16,0x95,0x8A,0x2A,0x33,0x66,0x9B,0x4E,0xFD,0x10,0x86,0x1A,0x4A,0x43,0x12,0x8A,0x63,0x1C,0x3A,0xD4,0xEB,0x47,0x42,0x24,0x45,0x2D,0x2C,0x2D,0xB5,0x73,0x53,0x2D,0x4B,0x8E,0xE4,0xA2,0xE5,0xC7,0x46,0x34,0xA2,0xEE,0x51,0xFC,0x75,0x26,0x97,0x3D,0x24,0x54,0xA2,0xB6,0x32,0x24,0x5A,0x90,0xB8,0x8D,0x4B,0x31,0xC0,0x14,0x5C,0x65,0x31,0xAD,0x41,0xBB,0xE5,0x0C,0xC3,0xD6,0xAC,0x26,0xB1,0x6B,0x9C,0x16,0x2B,0xF5,0x14,0x5C,0x0B,0xB0,0xDF,0xDB,0x3F,0xDD,0x99,0x7F,0x3A,0xBB,0x1B,0xAB,0x74,0x20,0xD1,0x71,0x16,0x16,0xA6,0x14,0x08,0x99,0x6A,0x64,0xA0,0x44,0xC2,0xA4,0x15,0x22,0x24,0x14,0xEA,0x00,0x28,0xA6,0x01,0x45,0x20,0x0A,0xAF,0x7F,0xFF,0x00,0x1E,0x92,0x7D,0x28,0x29,0x6E,0x72,0xD7,0xD0,0x8F,0x20,0x2D,0x65,0x98,0xD5,0x05,0x35,0xA0,0xE6,0xCC,0xDB,0xFD,0x42,0x28,0x47,0x5E,0x6B,0x97,0xBF,0xD5,0x1A,0x56,0x38,0x3C,0x52,0x24,0xCA,0x76,0x2F,0xDE,0xA3,0xA5,0xD4,0x63,0x28,0x55,0x69,0x0E,0x16,0x97,0x50,0x26,0x6D,0x3E,0xE8,0x0C,0xF9,0x2F,0xF9,0x54,0x0D,0x14,0x8B,0xD5,0x5B,0xF2,0xAA,0xD4,0x64,0x7C,0xD2,0x52,0x41,0x71,0xC0,0xD4,0xA2,0xA9,0x7B,0xA2,0x21,0x94,0xE4,0xD2,0x8F,0xB8,0x2A,0x0B,0x48,0xB3,0x24,0x0A,0xA9,0x9E,0xF5,0x53,0x9A,0x84,0x07,0xAA,0x0A,0x95,0x6B,0x72,0x49,0x56,0xB9,0xDF,0x16,0xDE,0xB4,0x6D,0x15,0xBA,0x9F,0x94,0xF2,0xD5,0x32,0xD5,0x0C,0xCC,0xB5,0xB8,0xDB,0x1F,0x5A,0x74,0xD7,0x1F,0x36,0x72,0x69,0xF9,0x88,0x68,0xB8,0x3E,0xB5,0x3C,0x5A,0x8C,0x91,0xFD,0xC9,0x08,0xFC,0x69,0x31,0x1A,0x56,0xDE,0x23,0xBC,0x8B,0xFE,0x5B,0x6E,0xFA,0xD6,0xCD,0xA7,0x8B,0xFB,0x4F,0x10,0xFA,0x8A,0x57,0x03,0x72,0xCF,0x5F,0xB1,0xB8,0xE3,0xCD,0xD8,0x7F,0xDA,0xAD,0x98,0x64,0x47,0x19,0x56,0x04,0x7B,0x55,0x5C,0x44,0xE2,0xA5,0x5A,0x91,0x12,0x0A,0x5A,0x60,0x14,0x52,0x10,0x51,0x4C,0x61,0x54,0x35,0x3B,0x95,0x58,0x8A,0xE6,0x90,0xCE,0x57,0x52,0xD4,0x23,0x8C,0x7C,0xCD,0x5C,0x8E,0xA9,0xAE,0xEE,0xCA,0xC4,0x69,0x39,0x58,0x0E,0x72,0xE2,0xE1,0xE5,0x39,0x2D,0x55,0x9A,0xA8,0x77,0x19,0x4C,0x39,0xA4,0x31,0xA7,0x8A,0x4C,0xD4,0xE8,0x31,0xC2,0xE6,0x55,0xE9,0x23,0x7E,0x74,0x86,0xF2,0x5F,0xEF,0xB1,0xA3,0x94,0x08,0xCC,0xCC,0x7A,0xD3,0x73,0x9A,0xAD,0x6E,0x20,0xDD,0x4E,0xDC,0x2A,0x80,0x63,0x53,0xC6,0x7E,0x51,0x59,0xB1,0xEC,0x69,0x4E,0xBF,0xBB,0xAA,0xDE,0x48,0xCD,0x2E,0x6D,0x74,0x2B,0xA1,0xE9,0x2B,0x52,0x0A,0xD8,0x90,0xB8,0x98,0x5B,0xC0,0xF2,0xB7,0x45,0x19,0xAE,0x0B,0x50,0xBC,0x92,0xF2,0x7F,0x31,0xCF,0x35,0x3D,0x40,0x6C,0x33,0x63,0xBD,0x3D,0xE6,0xA4,0x21,0x9B,0xF9,0xA5,0xDF,0x40,0x0F,0x12,0x54,0x8B,0x31,0xF5,0xA0,0x56,0x2C,0xC7,0x72,0x45,0x68,0x5A,0x6A,0xF3,0xDB,0x9F,0xDD,0xCA,0xCB,0xF8,0xD2,0xB6,0xA0,0x6F,0x59,0xF8,0xBE,0xEE,0x3F,0xF5,0x9B,0x64,0x1E,0xF5,0xBD,0x63,0xE3,0x1B,0x69,0x38,0x9E,0x32,0x9E,0xE3,0x9A,0x04,0x6E,0xDA,0xEA,0xD6,0x57,0x5F,0xEA,0xAE,0x17,0x3E,0x95,0x7A,0x98,0x82,0x8A,0x04,0x14,0x8C,0xC1,0x47,0x35,0x45,0xEC,0x65,0xEA,0x1A,0xA4,0x70,0x21,0xF9,0xB1,0x5C,0x3E,0xB9,0xE2,0x75,0xC9,0x58,0xDB,0x9A,0x94,0x24,0x71,0xD7,0xDA,0x9C,0xB7,0x0D,0xCB,0x56,0x79,0x73,0x48,0x64,0x64,0xD3,0x09,0xA6,0x3B,0x0A,0x91,0x3B,0xB7,0x02,0xAF,0x5B,0x69,0x8F,0x2B,0xED,0x34,0xB6,0x2B,0x94,0xAD,0x75,0x69,0xE5,0xB9,0x01,0xB2,0x2A,0x99,0x8C,0xE6,0x96,0x9B,0x88,0x61,0x4A,0x6E,0xD2,0x2A,0xBA,0x00,0xDC,0x1A,0x69,0xCD,0x0A,0xE0,0x14,0xDA,0xA0,0x17,0x91,0x4E,0x12,0x11,0x52,0x05,0xBF,0xB6,0x97,0x1B,0x5F,0xF3,0xAB,0x4A,0x37,0x3F,0xE1,0x53,0xEA,0x5A,0xD8,0xEE,0xAD,0xE6,0xCF,0x5A,0xB6,0x2B,0x52,0x0C,0xBF,0x14,0x4D,0xE5,0xE9,0x85,0x7F,0xBE,0x71,0x5C,0x66,0x79,0xA9,0x63,0x1D,0xEF,0x46,0xEA,0x36,0xD4,0x80,0xCD,0x00,0xD1,0xE8,0x03,0x83,0xD4,0x83,0x75,0x56,0xFA,0x81,0x20,0x62,0x2A,0x45,0x92,0xA3,0x50,0x26,0x59,0x88,0xA9,0xD2,0x73,0x45,0x80,0xB9,0x6D,0x34,0xA4,0xFC,0xB9,0xAE,0xB3,0x44,0xBE,0xD4,0x61,0xC7,0xEF,0x09,0x4F,0xEE,0xB5,0x31,0x1D,0x8D,0xAD,0xE0,0x99,0x7E,0x7F,0x95,0xAA,0xC1,0x75,0x1D,0xE9,0x08,0xA5,0x75,0xA9,0xC5,0x02,0xFD,0xEA,0xE5,0x35,0x9F,0x17,0x47,0x10,0x21,0x5B,0x9A,0x43,0x38,0x8D,0x4F,0x5F,0x9E,0xEC,0x9F,0x9B,0x8A,0xC6,0x79,0x4B,0x1E,0x4D,0x35,0xB8,0x11,0x66,0x98,0x4D,0x0F,0x71,0xD8,0x54,0x89,0xE4,0x38,0x51,0x5A,0x56,0xDA,0x4B,0x9C,0x17,0xEF,0x53,0x7D,0x4D,0x63,0x1B,0x9B,0xD6,0x3A,0x62,0x79,0x91,0x83,0xD6,0xAD,0x5D,0xC1,0x1D,0xAA,0x48,0x49,0xDB,0xBB,0x81,0xC5,0x3D,0xCD,0x24,0xAD,0x13,0x9D,0xBB,0xB5,0x80,0xCA,0xB0,0xAB,0xC8,0x1B,0xAB,0x3B,0x0E,0x2B,0x2A,0xE2,0x18,0x96,0x61,0x1C,0x13,0x79,0xB9,0xEF,0x8A,0x6A,0xC6,0x04,0x13,0xA4,0x49,0xF7,0x24,0x2C,0x7E,0x95,0x5C,0x9A,0x37,0x01,0xB4,0x52,0x0F,0x41,0xB4,0xD2,0x29,0xF4,0x01,0x2A,0x6B,0x79,0x21,0x0F,0xFB,0xE8,0xF7,0x2F,0xB1,0xA7,0x70,0xB0,0xD6,0xDB,0xBB,0xDA,0xBA,0x1D,0x0A,0xC8,0x38,0xDC,0x4E,0x46,0x2A,0x50,0xD1,0xB9,0x14,0x98,0x35,0xA3,0x6D,0x3E,0xEE,0xB5,0xA1,0x26,0x3F,0x8C,0x65,0xFD,0xDC,0x09,0xF8,0xD7,0x2D,0x9A,0x86,0x02,0xEE,0x34,0x99,0xA9,0xF3,0x02,0xE5,0x95,0x8B,0xDE,0x02,0x51,0xD4,0x63,0xD6,0xA6,0x6D,0x1A,0xF5,0x7A,0x26,0xFF,0x00,0xF7,0x4D,0x69,0x6B,0x93,0x7B,0x15,0xE4,0xB2,0xB9,0x88,0x7C,0xF0,0xB8,0xFC,0x29,0x81,0x8D,0x54,0x50,0x12,0x89,0x1B,0xD6,0x9E,0x24,0xF6,0xA2,0xD7,0x13,0x27,0x89,0x1A,0x53,0xC2,0x9A,0xD6,0xB3,0xD2,0x8B,0x72,0xC6,0x95,0x82,0xE6,0xFD,0x95,0x82,0x44,0x3A,0x56,0xD5,0xB6,0xD5,0x14,0x80,0xB0,0xFA,0x84,0x56,0xEB,0xF3,0x30,0xAC,0x3D,0x4F,0xC5,0xC9,0x10,0xC4,0x66,0x93,0x04,0x8E,0x43,0x52,0xF1,0x24,0xF7,0x47,0x86,0xC5,0x62,0xBD,0xC3,0x3F,0x2C,0xD4,0x92,0x2C,0x84,0xB7,0xBD,0x05,0xA8,0xB0,0x84,0xAB,0x36,0x30,0xAC,0xD3,0x85,0x73,0x85,0xF5,0xA8,0xBE,0xA5,0xC5,0x2B,0x9D,0x55,0x95,0xBD,0x82,0xAF,0xDE,0xFD,0x2B,0x51,0x74,0xDC,0x80,0xD0,0xD4,0x9D,0xF6,0xE8,0x67,0xCE,0xF2,0xC5,0xA9,0xC6,0x84,0x15,0x29,0xCD,0x43,0xAE,0xEA,0x4C,0xB2,0xA4,0x6A,0x47,0xA9,0xAB,0xE8,0x73,0xD6,0x30,0x2D,0xAF,0xA6,0x9A,0x49,0xA6,0x9D,0x4D,0xC6,0x17,0x01,0x6A,0xB4,0x72,0x83,0x7D,0xBF,0xC8,0xF2,0xD5,0x46,0x76,0x0A,0x3A,0x1C,0xFA,0x14,0xEE,0xA5,0x89,0xFF,0x00,0xD5,0xC3,0xB3,0xF1,0xAA,0x99,0xF7,0xA7,0xA8,0xD8,0x66,0x83,0x56,0x21,0x47,0xD6,0xA2,0x63,0xCD,0x2D,0xC0,0x4A,0x29,0x58,0x62,0x8A,0xEA,0xBC,0x2F,0x9F,0xB3,0x4A,0x7B,0x76,0xA7,0xA8,0x2D,0xCD,0x59,0xA3,0x31,0x9A,0x74,0x72,0x62,0x9D,0xC8,0x29,0xEB,0x70,0x35,0xE0,0x56,0x1F,0xC2,0x2B,0x9A,0x70,0xC8,0xD8,0x6E,0xA2,0xA5,0xEE,0x50,0xDC,0xD2,0xD0,0xEE,0x23,0x7F,0x46,0x8B,0xFD,0x17,0x77,0xAD,0x6B,0x46,0x38,0xAD,0x51,0x05,0x3D,0x6A,0xE1,0xD2,0xD7,0x01,0xC8,0xDC,0x6B,0x9F,0x19,0xED,0x4B,0x41,0x96,0xAD,0x20,0x69,0x1F,0x18,0xCD,0x6A,0x41,0xA6,0xA9,0x39,0x61,0x8A,0x69,0xB4,0x41,0xAD,0x6D,0x68,0x91,0xD6,0x84,0x78,0x51,0x53,0x71,0x84,0xBA,0x8C,0x50,0x0E,0x5A,0xB2,0x6F,0x7C,0x51,0xB4,0x11,0x15,0x4D,0xC6,0x8C,0x0B,0xBD,0x66,0xE2,0x7E,0xAE,0x6B,0x39,0xA7,0x67,0xEA,0x69,0x58,0xB2,0x3D,0xD4,0xDC,0xD3,0x4F,0xB8,0xC5,0x01,0x8D,0x58,0x8A,0xD5,0xDF,0x9A,0x91,0xA4,0x35,0xD3,0x61,0xAD,0x3D,0x02,0x05,0x9E,0xFC,0x2B,0xB0,0x1F,0x2F,0x7A,0x45,0x47,0xE2,0x47,0x5F,0xA7,0x5A,0x25,0xEB,0x30,0x74,0x0A,0xA9,0xDE,0xAD,0x4B,0x37,0xD8,0xC3,0x45,0xFF,0x00,0x7C,0xB5,0x66,0xDE,0x87,0x7E,0xDA,0x9C,0xE7,0xDB,0x66,0xB9,0xBC,0xCB,0x8E,0x95,0xCD,0x6A,0xB7,0x6F,0x71,0x7B,0x23,0x74,0xE7,0x8A,0xB4,0xF4,0x38,0xAA,0x15,0x20,0xBB,0x9E,0xD9,0xB3,0x0C,0x85,0x49,0xA7,0x25,0xF4,0xC2,0xE3,0xCE,0x27,0x7B,0x7F,0xB5,0x48,0xC4,0x6D,0xD5,0xDB,0xDC,0x7D,0xE0,0xA3,0xE8,0x2A,0xA1,0xAA,0x5E,0x63,0x1B,0x9A,0x33,0xEF,0x57,0xD0,0x04,0x2D,0x4D,0xA0,0x42,0x51,0x40,0xCB,0xF6,0x90,0xC6,0xE1,0x59,0xD7,0x3E,0xB5,0xD1,0x45,0xFB,0x8D,0x36,0x53,0x17,0xCB,0xE9,0x8A,0x35,0x66,0xD1,0x4B,0x92,0xE6,0xDC,0xB8,0x61,0x59,0xB2,0xB7,0x94,0x7D,0xAA,0x99,0x80,0xF4,0xB8,0x56,0xEF,0x54,0xB5,0x3D,0x3B,0xED,0x09,0xE6,0x45,0xF7,0xAA,0x7A,0x01,0xCF,0x3A,0x95,0x6C,0x1A,0x4A,0x95,0xDC,0x47,0x41,0x61,0x7B,0x6F,0x1D,0xBA,0x27,0x99,0x83,0x5A,0x71,0x5C,0xC6,0xDF,0x75,0xC5,0x69,0xCC,0x1C,0xA5,0x1D,0x5C,0x79,0xA5,0x00,0xAA,0xD0,0xDA,0xAF,0x7A,0x7E,0x62,0x66,0x9D,0xAA,0x88,0xFA,0x55,0xAF,0x3C,0x77,0x34,0x12,0x43,0x2E,0xAB,0x1C,0x3D,0xEB,0x32,0xE7,0x5F,0x90,0xF0,0x9C,0x52,0xB8,0xCC,0xA9,0xAF,0x65,0x97,0xEF,0x35,0x57,0x2E,0x4D,0x24,0xCB,0x13,0x26,0x93,0x9A,0x40,0x38,0x55,0xEB,0x0D,0x3A,0x4B,0xA7,0xC6,0x71,0x40,0x1D,0x7E,0x99,0xE1,0xA4,0x8D,0x37,0x30,0xCD,0x56,0x36,0x81,0x60,0x91,0xAA,0x19,0x74,0xCE,0x5A,0xF3,0x89,0xC8,0xA4,0x89,0x98,0x37,0xCB,0xE9,0x57,0xD0,0x4F,0x73,0x6A,0xC3,0x51,0xBD,0x83,0x8F,0x3B,0x66,0x7A,0x6F,0xE9,0x53,0x4D,0x73,0xAA,0x16,0xDF,0xE6,0x24,0x9F,0x85,0x67,0x6F,0x32,0xAE,0xD9,0x17,0xF6,0xAD,0xEC,0x5F,0x7A,0xCA,0x03,0xEF,0xB6,0xA9,0xB6,0xA1,0x6C,0x49,0xF3,0xB4,0xA4,0xCF,0xB3,0x62,0x9D,0xD9,0x25,0xB8,0xE7,0xF0,0xAC,0xB0,0x62,0xE2,0xCA,0xF6,0x29,0xB1,0xD5,0x1C,0x11,0x59,0xED,0x6D,0xA3,0x3F,0xFA,0xBB,0xA9,0x93,0xFD,0xE4,0xA7,0xCE,0xED,0xCB,0x61,0x59,0x90,0xB6,0x99,0x6C,0xDF,0xEA,0xB5,0x18,0x8F,0xFB,0xDC,0x54,0x4D,0xA3,0x4F,0xFF,0x00,0x2C,0xE4,0x89,0xFE,0x8F,0x45,0xD0,0x6A,0x56,0x93,0x4A,0xBC,0x8F,0xAC,0x2D,0xF8,0x55,0x57,0x86,0x48,0xFE,0xF2,0x91,0xF8,0x53,0xF2,0x15,0xD1,0x11,0xA4,0xA6,0x31,0x33,0x45,0x08,0x0D,0x6D,0x3F,0xEE,0xFE,0x15,0xBA,0xE7,0x66,0x99,0xCE,0x39,0x3D,0xE9,0x2F,0x77,0x53,0x6F,0xB0,0x5C,0x8A,0xE8,0x38,0xA8,0xAF,0x17,0x72,0xD5,0x48,0xC0,0xC0,0x79,0xDE,0x39,0x0A,0xE6,0xB7,0x34,0x09,0xDA,0x63,0xB5,0xA9,0x21,0x8F,0xD5,0xB4,0x13,0x70,0xDB,0xE0,0x2A,0x1B,0xDE,0xB2,0x1F,0x40,0xBC,0x4F,0xE1,0x07,0xE8,0x69,0xF2,0xF9,0x88,0x67,0xF6,0x74,0xD1,0xFD,0xE8,0xCD,0x4A,0x91,0x6C,0xA5,0xCA,0x22,0x65,0x71,0xDE,0x9C,0x6E,0x91,0x7B,0xD5,0x6C,0x89,0x65,0x77,0xD4,0xF1,0xD2,0xAA,0x4B,0xA8,0xBB,0x77,0xA8,0xD4,0xA4,0x55,0x69,0x99,0x8F,0x34,0xCC,0x9A,0xA1,0x8B,0x9A,0x4A,0x2C,0x31,0xDC,0xD3,0xC2,0x54,0x12,0x5B,0xB1,0x84,0x35,0xC4,0x61,0x8E,0x17,0x3C,0xD5,0xDD,0x4D,0xA3,0x17,0x3F,0xB8,0xC0,0xDB,0xDD,0x68,0x63,0xF3,0x26,0xB3,0xF1,0x05,0xFD,0xA4,0x7B,0x16,0x62,0x57,0xD0,0xD4,0x87,0x5E,0x76,0x84,0xA3,0x47,0xF8,0xD2,0xB1,0x4A,0x7C,0xA6,0x25,0xC3,0x79,0x92,0x97,0x1D,0xEB,0x5F,0xC3,0x69,0x03,0xDC,0x4A,0x6E,0x18,0x71,0xD3,0x34,0xF5,0xE5,0x05,0xAC,0x8E,0xB8,0x7D,0x9D,0xD0,0x2F,0xC8,0x45,0x34,0xDB,0x40,0x7A,0x28,0x1F,0x4A,0xCC,0xDF,0x94,0xA9,0x35,0x87,0xF7,0x79,0xAC,0x5D,0x46,0x15,0x8C,0x10,0xC3,0x9A,0xAB,0xD8,0x96,0x73,0x17,0x27,0x0E,0x71,0x55,0xCC,0x87,0xD6,0x9E,0xE6,0x43,0x7C,0xC3,0xEB,0x47,0x9A,0x47,0x7A,0xBB,0x08,0x95,0x2F,0xA7,0x8F,0xEE,0xCA,0xE3,0xF1,0xA9,0xFF,0x00,0xB6,0x2E,0x80,0xE6,0x4D,0xDF,0x51,0x53,0xCA,0x01,0xFD,0xA2,0x8F,0xFE,0xB2,0xDE,0x26,0xFC,0x31,0x4C,0xF3,0x2C,0xDF,0xAC,0x4C,0x9F,0x43,0x4B,0x52,0x6C,0x46,0xF0,0xDB,0x9F,0xF5,0x73,0x7E,0x0C,0x2A,0x3F,0xB3,0xB6,0x78,0x20,0xD5,0x26,0x33,0xA5,0xB4,0xD3,0xED,0xFC,0x95,0xC4,0xDF,0x3E,0x06,0x6A,0xDD,0xDD,0xBB,0x49,0x68,0xB1,0x46,0x79,0x14,0xEF,0xA1,0xAD,0xFD,0xD3,0x06,0xDE,0xF2,0x45,0xEF,0x57,0xD6,0xFB,0x2B,0xD6,0xAA,0xFA,0x19,0x19,0xF3,0x30,0x79,0x33,0x5A,0xBA,0x3C,0xC2,0x27,0xE6,0x94,0x76,0xD4,0x0D,0x69,0x75,0x25,0x1D,0xEB,0x3E,0x7D,0x5B,0xD0,0xD2,0x63,0xB9,0x46,0x4D,0x51,0x8F,0xF1,0x55,0x59,0x2F,0xD8,0xF7,0xA2,0x2D,0x08,0xAE,0xD7,0x6C,0x7B,0xD4,0x2D,0x2B,0x1E,0xF4,0xFC,0xC4,0x30,0x93,0x9A,0x4C,0xD3,0x28,0x76,0x68,0xE6,0xA1,0xBB,0x08,0x75,0x3D,0x50,0xD3,0x19,0x3A,0x2D,0x4A,0x16,0x9E,0xE2,0x3A,0x3F,0x04,0xD8,0x2D,0xFE,0xAE,0x11,0xFA,0x6C,0x35,0xB3,0xA8,0xFC,0x3A,0xB9,0x79,0xDA,0x4B,0x6B,0xB4,0x39,0xEC,0xC2,0x99,0x17,0x31,0x75,0x5F,0x04,0x6A,0x76,0x10,0x79,0xCC,0xF1,0x32,0x0F,0x43,0x58,0x33,0xD9,0x5D,0x41,0x8D,0xC8,0x6A,0x74,0xE6,0xB9,0x69,0x15,0x5C,0x92,0x7D,0xC5,0x4D,0x69,0xFC,0x46,0x87,0xB6,0x80,0x91,0x6E,0xDF,0x39,0xFB,0xDD,0x2A,0x51,0x77,0x70,0x9F,0x76,0x67,0xFC,0xEA,0x2C,0x6B,0x72,0x45,0xD5,0xEF,0x10,0xFF,0x00,0xAE,0x27,0xEB,0x4C,0xB8,0xBA,0x92,0xFA,0x36,0x69,0x3E,0xF2,0xD4,0xF2,0xD8,0x5C,0xC6,0x34,0xD5,0x51,0xEB,0x42,0x08,0x8D,0x36,0x8D,0x80,0x29,0x2A,0x84,0x25,0x26,0x68,0x01,0x69,0xDC,0xD0,0x31,0xEB,0x2C,0xAB,0xD1,0x8D,0x5B,0x83,0x56,0xBA,0x80,0xF5,0xDD,0xF5,0xA8,0x04,0xC7,0xF1,0x46,0x7D,0xEB,0x47,0x62,0x46,0xF9,0x82,0x94,0x5D,0x6C,0x3F,0x29,0xA8,0x1A,0x11,0xAE,0x98,0xF5,0x35,0x0B,0x4C,0x4D,0x36,0x84,0x30,0xB9,0xA4,0xCD,0x48,0x06,0x78,0xA2,0x8E,0x80,0x2D,0x1C,0xD6,0x85,0x12,0xA2,0x96,0xE9,0x56,0xE0,0xB0,0x96,0x5E,0xD5,0x36,0x11,0xAB,0x06,0x84,0xED,0xD6,0xAD,0x8F,0x0D,0x67,0xB9,0xAA,0x4C,0x68,0x1F,0xC3,0x33,0x81,0xF2,0x3F,0xE6,0x2A,0xB3,0x68,0x37,0xC9,0xFC,0x21,0xA8,0xE6,0x15,0x8E,0xA3,0xC0,0x36,0x92,0xD9,0x5C,0xCF,0x2D,0xC2,0xED,0x38,0xC0,0xAE,0xE3,0xED,0x9F,0xED,0x54,0x37,0xA8,0x24,0x66,0xEA,0xF2,0xFD,0xAE,0xDF,0xC9,0x63,0xC6,0x73,0xC5,0x73,0x57,0xDA,0x50,0x9F,0x00,0x48,0x46,0x2A,0x6E,0x6C,0xB4,0x46,0x54,0xFE,0x16,0xDC,0x72,0xB2,0xAF,0xE5,0x55,0x9B,0xC3,0xD7,0x49,0xF7,0x36,0x1F,0xC6,0xA9,0x93,0x61,0xA9,0xA4,0xDD,0xC4,0x1B,0x31,0xD4,0x12,0x58,0xDC,0x83,0xCC,0x4D,0xF9,0x50,0x22,0x06,0xB7,0x94,0x75,0x8D,0xBF,0x2A,0x6C,0x79,0x8D,0xF9,0x07,0x1D,0xEA,0x75,0x11,0x91,0x7D,0x94,0x94,0xD5,0x4C,0xE6,0x80,0x63,0x0F,0x5A,0x2A,0xF6,0x10,0x94,0xDE,0xF4,0xC0,0x29,0x28,0x10,0x55,0x84,0x8F,0x77,0x5A,0x43,0x24,0x45,0x40,0xC3,0x7E,0x71,0x9A,0xE8,0xE1,0xD3,0x34,0xD7,0x4D,0xCA,0xBB,0xBF,0x1A,0xA8,0xD8,0x11,0xCD,0xB4,0x94,0xDD,0xF4,0x5C,0x06,0x6E,0xA4,0xCD,0x20,0x14,0xD0,0x28,0xF5,0x10,0x52,0xD1,0x70,0x0A,0x70,0xA4,0x04,0x89,0x13,0x3F,0x4A,0xD1,0xB5,0xD2,0xA4,0x90,0xF3,0x4B,0x71,0x9B,0x96,0x5A,0x28,0x5E,0x4D,0x6D,0xDB,0x58,0x05,0xED,0x4F,0x51,0x1A,0x11,0x40,0x07,0x6A,0xB2,0x00,0xF4,0xA0,0x62,0xFE,0x14,0x9B,0x47,0xA5,0x03,0x2D,0xDB,0x6D,0x45,0xE2,0xA5,0x32,0x0A,0x40,0x54,0x9C,0xAB,0x1A,0xA8,0xC1,0x73,0xD6,0x91,0x63,0x3F,0xE0,0x54,0xEF,0xC6,0xA4,0xAB,0x8C,0x6A,0x8C,0xFD,0x2A,0x80,0x6A,0xCE,0xAB,0xD5,0x1A,0x99,0x23,0xDA,0xC9,0xF7,0x94,0x7E,0x22,0x9A,0x64,0x19,0x3A,0xAE,0x97,0x63,0x7C,0x9F,0x2B,0x2C,0x6E,0x3A,0x11,0x5C,0x45,0xED,0xB3,0x5A,0x4E,0xD1,0x31,0xE4,0x7A,0x52,0xB9,0x32,0x5A,0x15,0xA9,0xBC,0xD5,0x88,0x4A,0x4A,0x00,0x28,0xA6,0x02,0xAF,0x1D,0x6A,0x6D,0xD5,0x20,0x2E,0xE3,0x56,0x6D,0x2F,0xE4,0xB6,0x3D,0x78,0xA9,0xD0,0x69,0x94,0xC9,0xA4,0xAD,0x3C,0xC9,0x0A,0x2A,0x17,0x70,0x0A,0x2A,0x80,0x76,0x29,0xCA,0x8C,0x68,0xEA,0x05,0xA8,0x2C,0x9D,0xEB,0x56,0xD7,0x43,0x2D,0xD6,0x98,0xCD,0xBB,0x5D,0x14,0x28,0xAD,0x58,0x34,0xED,0xBD,0xA8,0x02,0xFC,0x76,0xDB,0x6A,0x61,0x1D,0x02,0x1D,0xB6,0x97,0x69,0xA0,0x62,0xED,0x34,0x6D,0x34,0x80,0x95,0x41,0xC5,0x35,0xB3,0x48,0x65,0x79,0x73,0x55,0xDF,0x34,0x86,0x47,0xCD,0x3F,0x9A,0x45,0x21,0xA7,0x35,0x17,0x34,0x0C,0x78,0xE9,0x55,0xAE,0x36,0xFF,0x00,0x76,0x82,0x4C,0xAB,0xA8,0x03,0xF4,0xC8,0xAC,0x5B,0xBD,0x21,0xE6,0x6C,0xF9,0x99,0xFA,0xD3,0x06,0x67,0x49,0xA4,0x4E,0xBE,0x86,0xAB,0x49,0x65,0x32,0x75,0x53,0x4F,0x5E,0x84,0xB4,0x40,0xD1,0xB0,0xF5,0xA6,0x6D,0x34,0x21,0x0A,0x14,0xB1,0xC5,0x3B,0xC9,0x35,0x2D,0x80,0xC2,0x0F,0xA5,0x37,0x35,0x40,0x1B,0x8E,0x3A,0xD1,0xBA,0x90,0x12,0x77,0xA5,0xCD,0x5B,0xD4,0x4C,0x4E,0xF4,0xEE,0x6A,0x40,0x72,0xC4,0xC6,0xAC,0xA5,0x93,0xBD,0x3D,0xC6,0x68,0x5B,0xE9,0x25,0xBA,0x8A,0xD5,0xB7,0xD1,0xD7,0xD2,0x9A,0x11,0xA7,0x06,0x9A,0xAB,0x57,0xE2,0xB4,0x55,0xA6,0x05,0xA4,0x8C,0x0A,0x94,0x7D,0x68,0x18,0xF0,0x7D,0xEA,0x41,0xF5,0xA4,0x03,0xBF,0x1A,0x5F,0xC6,0x80,0x0F,0xC6,0x97,0x3E,0xF4,0x0C,0x7E,0x78,0xEB,0x51,0xB7,0xD6,0xA4,0x08,0x5F,0xEB,0x55,0xDF,0xEB,0x40,0xC6,0x52,0xD2,0x28,0x69,0xC5,0x30,0xD0,0x03,0x73,0xC5,0x57,0x94,0xE6,0x81,0x15,0x5E,0xA0,0x6A,0x18,0x10,0xB2,0xE6,0xA1,0x65,0xF6,0xA6,0x32,0xBC,0x90,0x8F,0x6A,0xAB,0x2D,0x9C,0x47,0xA8,0xC5,0x3D,0x51,0x25,0x66,0xB1,0x8B,0x3D,0xEA,0x27,0xB0,0xF4,0x73,0x50,0xDF,0x71,0x58,0x88,0xD9,0xCA,0x3A,0x11,0x51,0x9B,0x59,0x3D,0x29,0x85,0x99,0x1B,0x40,0xFD,0xD2,0x81,0x08,0xEE,0x0D,0x2B,0x80,0x6D,0x34,0xF1,0x11,0xAD,0x1A,0x24,0xB1,0x0D,0xA6,0xEE,0xF5,0x7E,0x2D,0x38,0x50,0x90,0xCB,0xF0,0xE9,0x8B,0x57,0xE2,0xD3,0xC2,0xD5,0x2D,0xB4,0x02,0xEC,0x56,0xCA,0x2A,0xC2,0xA0,0x5A,0x60,0x4A,0xBF,0x5A,0x90,0x52,0x01,0xE2,0x9D,0x4C,0x07,0x8A,0x93,0x35,0x22,0x1C,0x0D,0x3E,0x90,0xC5,0xA3,0x34,0x00,0xBB,0xA9,0x8C,0x68,0x19,0x03,0x66,0xA2,0x26,0x90,0xC6,0xE6,0x8D,0xD5,0x23,0x23,0x2D,0x51,0x16,0xA6,0x31,0x85,0xEA,0x26,0x7A,0x62,0x2B,0xC9,0x25,0x40,0xCF,0xCD,0x21,0x91,0x73,0x50,0x31,0x34,0x6A,0x04,0x4D,0xF5,0xA8,0xC9,0xA0,0x08,0xE9,0x30,0x69,0x72,0x80,0xC2,0x94,0x84,0xD3,0xF3,0x10,0x98,0x24,0xD3,0xC4,0x54,0xAF,0xDC,0x7A,0x19,0x0B,0x53,0xC7,0x5A,0xBB,0x33,0x12,0xE4,0x5C,0x56,0x95,0xB4,0xB4,0xC6,0x68,0xC6,0x7D,0x2A,0xDC,0x6D,0x40,0xC9,0x81,0xA7,0x66,0x81,0x0F,0x0D,0x4F,0x56,0xA2,0xC0,0x3C,0x1A,0x78,0x6A,0x40,0x3B,0x34,0xF0,0x68,0x01,0xF9,0xA5,0xA0,0x62,0xEE,0xA4,0xDD,0x52,0x31,0x77,0x53,0x1A,0x4A,0x00,0x84,0xBD,0x44,0xCF,0x40,0xC6,0xEE,0xA8,0xF7,0x1A,0x43,0x10,0xD4,0x64,0x50,0x03,0x08,0xC5,0x46,0xCC,0x29,0x5C,0x08,0x5C,0xD5,0x79,0x1A,0x8D,0xC0,0x88,0x93,0x50,0x9E,0xB4,0xF5,0x19,0x1B,0x6E,0xC7,0x14,0xCF,0x2B,0x3D,0x68,0x5B,0x08,0x6F,0x0B,0x51,0xBB,0xFA,0x50,0x36,0x45,0x96,0xA5,0x55,0x6A,0x9F,0x20,0x27,0x45,0xA9,0x36,0xD5,0x2D,0xC0,0xE7,0xC5,0x4B,0x19,0x35,0x56,0x6F,0x43,0x22,0xDC,0x75,0x7E,0xDD,0x49,0xA1,0x79,0x81,0xAD,0x1A,0x71,0x56,0x63,0x5A,0xD1,0x8C,0x99,0x69,0xE2,0x95,0x84,0x2D,0x3F,0x75,0x03,0x17,0x7D,0x3C,0x3D,0x21,0x0E,0x0F,0x4F,0x0D,0x40,0x0E,0xDD,0x46,0xEA,0x43,0x17,0x34,0xA2,0x80,0x14,0xD3,0x09,0xA9,0xB0,0xC6,0x16,0x14,0xC2,0xC2,0x81,0x91,0xEE,0xA6,0x13,0x45,0xC6,0x34,0xB5,0x46,0x4F,0xBD,0x0C,0x08,0x99,0xBD,0xEA,0x17,0x38,0xA9,0xD8,0x08,0xB2,0xE6,0x9B,0xE5,0x9E,0xF4,0xC0,0x46,0x8E,0xA2,0x65,0x02,0x80,0x20,0x67,0xA8,0xA4,0x97,0xD2,0x8B,0x81,0x11,0xCE,0x29,0x56,0x3A,0x43,0x17,0x18,0xA5,0x0B,0x42,0xD1,0x8C,0x93,0xA5,0x3A,0xA9,0x05,0x8C,0x0D,0x87,0x35,0x22,0x2D,0x3D,0x8C,0x4B,0xF6,0xF1,0xE6,0xB5,0x60,0x5C,0x0A,0xA4,0x99,0x25,0xA0,0xD5,0x3A,0x35,0x51,0x44,0x9B,0xE9,0x56,0x41,0x40,0x0E,0x2F,0x40,0x6A,0x00,0x7D,0x38,0x52,0x02,0x51,0x4F,0xA0,0x07,0x66,0x8C,0xD4,0x8C,0x37,0xD0,0x66,0xA0,0x06,0xF9,0xA4,0xD3,0x73,0x40,0xC6,0x1A,0x66,0xF1,0x4A,0xDA,0x00,0xCF,0x36,0x98,0x65,0xA4,0x50,0xCD,0xC4,0xD3,0x48,0x26,0x80,0x0F,0x2E,0x90,0xAE,0x28,0x10,0xC6,0xE2,0xA1,0x79,0x31,0x48,0x68,0xAE,0xD2,0xFB,0xD5,0x69,0x25,0xCD,0x31,0x10,0xFC,0xCD,0x4E,0xDB,0x8A,0x23,0xB0,0xD0,0xB4,0xDA,0x2D,0x61,0x80,0xE6,0x9E,0xB4,0xAD,0xD8,0x43,0xBD,0x68,0xA3,0x72,0x8C,0xCC,0x54,0x91,0x28,0xAD,0x2C,0x71,0x5C,0xBB,0x16,0x07,0x7A,0xB4,0x8D,0xEF,0x54,0xB6,0x29,0x48,0xB0,0x95,0x2E,0xFC,0x53,0xB1,0x64,0x2F,0x35,0x41,0xF6,0xBC,0x1A,0x68,0x0B,0x11,0xDD,0xE6,0xAD,0xA4,0xCA,0x68,0xB0,0x13,0x2B,0x8A,0x77,0x99,0x52,0x50,0x79,0xB5,0x27,0x99,0x48,0x03,0xCC,0xA5,0xDC,0x68,0x01,0x45,0x2D,0x03,0x17,0x20,0x54,0x6F,0x25,0x40,0xC8,0x8C,0x95,0x19,0x26,0x80,0x14,0x47,0xEF,0x4E,0x09,0x48,0x05,0xC5,0x21,0xA6,0x32,0x36,0x7C,0x54,0x2D,0x2D,0x03,0x2B,0xCD,0x2D,0x57,0x72,0x68,0xD0,0x44,0x18,0x62,0x68,0x09,0x46,0xC0,0xC5,0x3C,0x53,0x09,0xA0,0x05,0x20,0xD0,0x16,0x9E,0x96,0xB0,0x21,0x31,0xCD,0x3A,0xA2,0xFA,0x8C,0x3A,0xD1,0x9E,0x29,0xEC,0x51,0x91,0xE6,0xD3,0xD6,0x6C,0x56,0xA7,0x9E,0x4A,0xB3,0xFB,0xD5,0x98,0xEE,0x3D,0x68,0x4F,0x41,0x96,0x56,0xEB,0xDE,0x94,0xDD,0x7B,0xD5,0xFD,0x92,0x93,0x2A,0xCD,0x75,0xEF,0x54,0x1E,0xEF,0xE6,0xEB,0x59,0x6C,0xCD,0x09,0x12,0xF7,0x1D,0xEA,0xD2,0x6A,0x07,0xD6,0xAE,0xFA,0x8C,0xB3,0x1E,0xA2,0x78,0xE6,0xAD,0x47,0x7B,0x9E,0xF4,0xC4,0x5A,0x8A,0x7C,0xF5,0xAB,0x6B,0x22,0xD4,0x94,0x3F,0x70,0xA5,0x0D,0x40,0xC3,0x7D,0x37,0x79,0xA6,0xC6,0x19,0x26,0x93,0x6D,0x45,0x80,0x50,0x28,0xDB,0x40,0xC2,0x82,0x68,0x01,0x85,0xEA,0x32,0xF4,0x86,0x40,0xEF,0x55,0xDB,0x26,0x80,0x23,0x61,0x46,0x2A,0x75,0xBE,0xA2,0x03,0x51,0x67,0x35,0x4C,0x64,0x46,0x90,0x0A,0x22,0xAE,0x31,0xE3,0x34,0x9B,0xA8,0x10,0x27,0xAD,0x3B,0xDE,0xA6,0xC5,0x6E,0x37,0xA9,0xA5,0x39,0x6A,0x2D,0x76,0x07,0x3B,0xCD,0x21,0x26,0xAB,0x5D,0x8E,0x51,0x44,0x86,0x9E,0x27,0xA4,0x49,0x2A,0xDC,0x7B,0xD2,0xFD,0xAA,0xB4,0x7E,0xE2,0x04,0x41,0x2C,0xF9,0xEF,0x55,0x0B,0x1C,0xD6,0x57,0x36,0x42,0x89,0x0D,0x48,0x25,0xF7,0xA6,0xB4,0x02,0x54,0xB8,0xC5,0x5B,0x8E,0xF3,0x1D,0xEB,0x55,0x20,0xB1,0x72,0x2B,0xEC,0x77,0xAB,0x71,0x6A,0x1E,0xF5,0x69,0xDC,0x45,0xA4,0xBF,0xF7,0xAB,0x09,0x79,0x9A,0x43,0x2C,0x24,0xC0,0xD4,0xC8,0x45,0x20,0x1F,0x46,0x6A,0x0A,0x13,0x34,0xD2,0xF4,0x80,0x6E,0xFA,0x61,0x7A,0x4C,0x64,0x2C,0xF5,0x1B,0x3D,0x31,0x91,0xF5,0xA3,0x14,0x5B,0xB0,0x86,0x35,0x32,0x95,0x80,0x69,0x35,0x13,0x36,0x29,0x0C,0x6A,0x82,0x7A,0xD3,0xE9,0xF5,0x01,0xB9,0xA4,0xC5,0x4A,0x8F,0x40,0x16,0x8A,0xB2,0x80,0x53,0x97,0x35,0x16,0xD0,0x67,0x3F,0x4E,0xD9,0x91,0x4F,0x53,0x98,0x4F,0xB3,0xE6,0x98,0xD6,0xEC,0x28,0x40,0x46,0x55,0x96,0xA3,0x24,0xD3,0x6E,0xC0,0x30,0xB5,0x33,0x35,0x25,0x05,0x14,0x00,0xBB,0xA9,0xE1,0xCD,0x00,0x3C,0x4C,0x45,0x4C,0x2E,0x4D,0x6A,0xA6,0x22,0x65,0xBB,0x35,0x6E,0x1B,0xCF,0x7A,0xA8,0xF7,0x02,0xF4,0x57,0xF5,0x7A,0x2B,0xEA,0xA1,0x96,0x16,0xF7,0xDE,0xA4,0x17,0x39,0xA8,0xB3,0xDC,0x63,0xBC,0xF1,0x4C,0x2F,0x9E,0xF5,0x23,0x19,0xBA,0x90,0xB5,0x55,0x98,0xC6,0x6E,0xA6,0xD4,0xD8,0x07,0x0A,0x46,0x34,0x5E,0xCC,0x08,0x58,0xE4,0xD3,0x33,0x48,0x08,0x99,0xA8,0x03,0x34,0xC0,0x5A,0x6B,0x51,0xAB,0x18,0x82,0x9C,0x6A,0x1F,0x66,0x00,0x29,0x68,0xD4,0x07,0xAF,0x4A,0x55,0xE6,0x84,0x9E,0xE5,0x1F,0xFF,0xD9};
	unsigned long imageSizeOriginal = sizeof(img)/sizeof(img[0]);

	imageCapturer->decodeJPEG(img, imageSizeOriginal, 1);

	unsigned long imageSize = 0;
	uint8_t *imageBuffer = NULL;
	imageCapturer->extractImage();
	imageCapturer->encodeJPEG(&imageBuffer, &imageSize, 16);
  /* USER CODE END 2 */

  /* USER CODE BEGIN RTOS_MUTEX */
  /* add mutexes, ... */
  /* USER CODE END RTOS_MUTEX */

  /* USER CODE BEGIN RTOS_SEMAPHORES */
  /* add semaphores, ... */
  /* USER CODE END RTOS_SEMAPHORES */

  /* USER CODE BEGIN RTOS_TIMERS */
  /* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* USER CODE BEGIN RTOS_QUEUES */
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);

  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 4;
  RCC_OscInitStruct.PLL.PLLN = 275;
  RCC_OscInitStruct.PLL.PLLP = 1;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 2;
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief DCMI Initialization Function
  * @param None
  * @retval None
  */
static void MX_DCMI_Init(void)
{

  /* USER CODE BEGIN DCMI_Init 0 */

  /* USER CODE END DCMI_Init 0 */

  /* USER CODE BEGIN DCMI_Init 1 */

  /* USER CODE END DCMI_Init 1 */
  hdcmi.Instance = DCMI;
  hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
  hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
  hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
  hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
  hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
  hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
  hdcmi.Init.JPEGMode = DCMI_JPEG_ENABLE;
  hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
  hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
  hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
  hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
  if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN DCMI_Init 2 */

  /* USER CODE END DCMI_Init 2 */

}


/**
  * @brief FDCAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_FDCAN1_Init(void)
{

  /* USER CODE BEGIN FDCAN1_Init 0 */

  /* USER CODE END FDCAN1_Init 0 */

  /* USER CODE BEGIN FDCAN1_Init 1 */

  /* USER CODE END FDCAN1_Init 1 */
  hfdcan1.Instance = FDCAN1;
  hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
  hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
  hfdcan1.Init.AutoRetransmission = DISABLE;
  hfdcan1.Init.TransmitPause = DISABLE;
  hfdcan1.Init.ProtocolException = DISABLE;
  hfdcan1.Init.NominalPrescaler = 16;
  hfdcan1.Init.NominalSyncJumpWidth = 1;
  hfdcan1.Init.NominalTimeSeg1 = 2;
  hfdcan1.Init.NominalTimeSeg2 = 2;
  hfdcan1.Init.DataPrescaler = 1;
  hfdcan1.Init.DataSyncJumpWidth = 1;
  hfdcan1.Init.DataTimeSeg1 = 1;
  hfdcan1.Init.DataTimeSeg2 = 1;
  hfdcan1.Init.MessageRAMOffset = 0;
  hfdcan1.Init.StdFiltersNbr = 0;
  hfdcan1.Init.ExtFiltersNbr = 0;
  hfdcan1.Init.RxFifo0ElmtsNbr = 0;
  hfdcan1.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
  hfdcan1.Init.RxFifo1ElmtsNbr = 0;
  hfdcan1.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
  hfdcan1.Init.RxBuffersNbr = 0;
  hfdcan1.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
  hfdcan1.Init.TxEventsNbr = 0;
  hfdcan1.Init.TxBuffersNbr = 0;
  hfdcan1.Init.TxFifoQueueElmtsNbr = 0;
  hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
  hfdcan1.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
  if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN FDCAN1_Init 2 */

  /* USER CODE END FDCAN1_Init 2 */

}

/**
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{

  /* USER CODE BEGIN I2C1_Init 0 */

  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
  hi2c1.Init.Timing = 0x60404E72;
  hi2c1.Init.OwnAddress1 = 0;
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
  {
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
  {
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}

/**
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{

  /* USER CODE BEGIN USART3_Init 0 */

  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
  huart3.Init.BaudRate = 115200;
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
  huart3.Init.StopBits = UART_STOPBITS_1;
  huart3.Init.Parity = UART_PARITY_NONE;
  huart3.Init.Mode = UART_MODE_TX_RX;
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  if (HAL_UART_Init(&huart3) != HAL_OK)
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
  {
    Error_Handler();
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
  {
    Error_Handler();
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}

/**
  * @brief USB_OTG_HS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_HS_USB_Init(void)
{

  /* USER CODE BEGIN USB_OTG_HS_Init 0 */

  /* USER CODE END USB_OTG_HS_Init 0 */

  /* USER CODE BEGIN USB_OTG_HS_Init 1 */

  /* USER CODE END USB_OTG_HS_Init 1 */
  /* USER CODE BEGIN USB_OTG_HS_Init 2 */

  /* USER CODE END USB_OTG_HS_Init 2 */

}

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 5, 0);
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);

}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();
  __HAL_RCC_GPIOG_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CAMERA_RESET_GPIO_Port, CAMERA_RESET_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_GREEN_Pin|LED_RED_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(USB_FS_PWR_EN_GPIO_Port, USB_FS_PWR_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_YELLOW_GPIO_Port, LED_YELLOW_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : CAMERA_RESET_Pin */
  GPIO_InitStruct.Pin = CAMERA_RESET_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(CAMERA_RESET_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pins : LED_GREEN_Pin LED_RED_Pin */
  GPIO_InitStruct.Pin = LED_GREEN_Pin|LED_RED_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);

  /*Configure GPIO pin : USB_FS_PWR_EN_Pin */
  GPIO_InitStruct.Pin = USB_FS_PWR_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(USB_FS_PWR_EN_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : USB_FS_OVCR_Pin */
  GPIO_InitStruct.Pin = USB_FS_OVCR_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(USB_FS_OVCR_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : USB_FS_VBUS_Pin */
  GPIO_InitStruct.Pin = USB_FS_VBUS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(USB_FS_VBUS_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : USB_FS_ID_Pin */
  GPIO_InitStruct.Pin = USB_FS_ID_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG1_HS;
  HAL_GPIO_Init(USB_FS_ID_GPIO_Port, &GPIO_InitStruct);

  /*Configure GPIO pin : LED_YELLOW_Pin */
  GPIO_InitStruct.Pin = LED_YELLOW_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LED_YELLOW_GPIO_Port, &GPIO_InitStruct);

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/* USER CODE BEGIN Header_StartDefaultTask */
/**
  * @brief  Function implementing the defaultTask thread.
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
  }
  /* USER CODE END 5 */
}

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */
